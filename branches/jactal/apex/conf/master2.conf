input {
    file {
        path => "d:/eworkspace/jactal/apex/patientdata10k/LabsCorePopulatedTable.txt"
        type => "LabData"
        start_position => "beginning"
        sincedb_path => "c:/projects/cisco/java/apex/temp1"
    }

    file {
        path => "d:/eworkspace/jactal/apex/patientdata10k/PatientCorePopulatedTable.txt"
        type => "Patient"
        start_position => "beginning"
        sincedb_path => "c:/projects/cisco/java/apex/temp2"
    }

    file {
        path => "d:/eworkspace/jactal/apex/patientdata10k/AdmissionsCorePopulatedTable.txt"
        type => "Admission"
        start_position => "beginning"
        sincedb_path => "c:/projects/cisco/java/apex/temp3"
    }

    file {
        path => "d:/eworkspace/jactal/apex/patientdata10k/AdmissionsDiagnosesCorePopulatedTable.txt"
        type => "Diagnoses"
        start_position => "beginning"
        sincedb_path => "c:/projects/cisco/java/apex/temp4"
    }
}

filter {

    if [type] == "LabData" {
        grok {
            patterns_dir => "d:/eworkspace/jactal/apex/grokpatterns"
            match => {
                "message" => "%{PIDPAT:patientId}\t+%{NUMBER:admissionId:int}\t+%{DATA:labName}\t+%{BASE10NUM:labValue}\t+%{DATA:labUnits}\t+%{TIMESTAMP_ISO8601:labDateTime}"
            }
        }     
    }

    if [type] == "Patient" {
        grok {
            patterns_dir => "d:/eworkspace/jactal/apex/grokpatterns"
            match => {
                "message" => "%{PIDPAT:patientId}\t+%{DATA:gender}\t+%{TIMESTAMP_ISO8601:dateOfBirth}\t+%{DATA:race}\t+%{DATA:maritalStatus}\t+%{DATA:language}\t+%{NUMBER:povertyIndex}"
            }
        }
    }

    if [type] == "Admission" {
        grok {
            patterns_dir => "d:/eworkspace/jactal/apex/grokpatterns"
            match => {
                "message" => "%{PIDPAT:patientId}\t+%{NUMBER:admissionId:int}\t+%{TIMESTAMP_ISO8601:startDate}\t+%{TIMESTAMP_ISO8601:endDate}"
            }
        }
    }


    if [type] == "Diagnoses" {
        grok {
            patterns_dir => "d:/eworkspace/jactal/apex/grokpatterns"
            match => {
                "message" => "%{PIDPAT:patientId}\t+%{NUMBER:admissionId:int}\t+%{DIAGCODE:diagnosisCode}\t+%{DESCRIPTION:diagnosisText}"
            }
        }
    }

    mutate {
        add_field => {
            "entityType" => "%{type}"
        }
        remove_field => ["message", "@version", "host", "path"]
        rename => {
            "@timestamp" => "timestamp"
        }
    }

}

output {
    http {
        url => "http://localhost:8080/jactal/jsp/load_data"
        http_method => "post"
   }
#    stdout {
#        codec => rubydebug
#    }
}